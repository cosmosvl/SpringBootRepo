<project xmlns="http://maven.apache.org/POM/4.0.0" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 
  	http://maven.apache.org/xsd/maven-4.0.0.xsd">
  	<modelVersion>4.0.0</modelVersion>
	
  	<groupId>com.boot</groupId>
  	<artifactId>das-boot</artifactId>
  	<version>0.0.1-SNAPSHOT</version>
  	<packaging>jar</packaging>

	<parent>
	    <groupId>org.springframework.boot</groupId>
	    <artifactId>spring-boot-starter-parent</artifactId>
	    <version>1.5.9.RELEASE</version>
	</parent>

  	<name>das-boot</name>
  	<url>http://maven.apache.org</url>
  	
  	<properties>
    	<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  	</properties>

	<!-- 	COMMENT: 
			"spring-boot-starter-data-jpa" dependency allow Spring Boot to 
			auto configure and integrate to a data source.
			In this case, JPA use embedded H2 Database "com.h2database" as 
			a data source to store and get the data.
			
			In real world case, people do not use H2 embedded database but instead using
			mySQL, Postgres or Oracle, which located in own server.
			
			That means, we need to tell Spring boot in "application.properties"
			to provide JDBC conn details and Spring will automatically set up the
			data source pooling.
			
			Default pooling strategy:
			tomcat-jdbc, because of the good performance
			Other pooling strategy:
			HikariCP, Commons-DBCP and Commons-DBCP2
	-->
  	<dependencies>
  		<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-web</artifactId>
    	</dependency>
    	<dependency>
        	<groupId>org.springframework.boot</groupId>
        	<artifactId>spring-boot-starter-data-jpa</artifactId>
    	</dependency>
    	<dependency>
        	<groupId>com.h2database</groupId>
        	<artifactId>h2</artifactId>
    	</dependency>
    	<dependency>
        	<groupId>org.flywaydb</groupId>
        	<artifactId>flyway-core</artifactId>
    	</dependency>
    	
    	<dependency>
        	<groupId>junit</groupId>
        	<artifactId>junit</artifactId>
        	<scope>test</scope>
    	</dependency>
  	</dependencies>
</project>
